filetype indent on                                                      Set indent on
set smartindent                                                         Set smart indent
mapleader = ","                                                         Map custom command leader to , instead of \
autocmd BufRead,BufWritePre *html normal gg=G                           On html file open or right before save, indent from beginning to end of file
                                                                        If I put <buffer> in the line it will only be available for html files
autocmd filetype html nnoremap <buffer> <leader>c I<!--<esc>A--><esc>   Set up custom command for html files which will work by typing ,c
                                                                        Go to insert mode at beginning of line
                                                                        Insert comment
                                                                        Go back to command mode
                                                                        Go to insert mode at end of line
                                                                        Go back to command mode
augroup JavaScriptCommands                                              Create auto command group called JavaScriptCommands
    autocmd!                                                            Gets rid all previously written auto commands so we don't duplicate
    autocmd filetype javascript nnoremap <buffer> <leader>c I//<esc>    Set up custom command for javascript files which will work by typing ,c
                                                                        Go to insert mode at beginning of line
                                                                        Put // comment
                                                                        Go back to command mode
augroup END                                                             End auto command group JavaScriptCommands
function! InsertTabWrapper()                                            Create a function to create tab completion for keywords
    let col = col(".") - 1                                              Get the current column and subtract 1
    if !col || getline(".")[col - 1] !~ '\k'                            If column is 0 or char before is not a keyword
        return "\<tab>"                                                 Return tab character
    else                                                                Otherwise
        return "\<c-n>"                                                 Return control-n
endfunction                                                             End our function
inoremap <tab> <c-r>=InsertTabWrapper()<cr>                             Map tab to our function
    inoremap <s-tab> <c-p>                                              Map shift tab to control
